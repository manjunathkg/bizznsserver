<?xml version="1.0" encoding="ISO-8859-1"?>
<!--
	/*
	* Copyright 2013 Robert Csakany <robson@semmi.se>.
	*
	* Licensed under the Apache License, Version 2.0 (the "License");
	* you may not use this file except in compliance with the License.
	* You may obtain a copy of the License at
	*
	* http://www.apache.org/licenses/LICENSE-2.0
	*
	* Unless required by applicable law or agreed to in writing, software
	* distributed under the License is distributed on an "AS IS" BASIS,
	* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	* See the License for the specific language governing permissions and
	* limitations under the License.
	* under the License.
	*/
-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>com.bizzns</groupId>
    <artifactId>com.bizzns.parent</artifactId>
      <version>2-SNAPSHOT</version>
	  <relativePath>../com.bizzns.parent</relativePath>
  </parent>

	<artifactId>com.bizzns.wro4j</artifactId>
	<packaging>bundle</packaging>
	<version>1.0</version>
	<name>bizzns :: WRO4J</name>
	<description>
		bizzns WRO4J framework. WRO4J is Free and Open Source Java project which brings together almost all the modern web tools: JsHint, CssLint, JsMin, Google Closure compressor, YUI Compressor, UglifyJs, Dojo Shrinksafe, Css Variables Support, JSON Compression, Less, Sass, CoffeeScript and much more. In the same time, the aim is to keep it as simple as possible and as extensible as possible in order to be easily adapted to application specific needs.
	</description>

	<build>
		<plugins>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<executions>
					<execution>
						<id>unpackstringtemplate</id>
						<phase>generate-resources</phase>
						<goals>
							<goal>unpack</goal>
						</goals>
						<configuration>
							<includes>**/*.xml,**/*.properties,**/*.class</includes>
							<artifactItems>
								<artifactItem>
									<groupId>org.antlr</groupId>
									<artifactId>stringtemplate</artifactId>
									<version>4.0.2</version>
									<outputDirectory>${basedir}/target/classes</outputDirectory>
								</artifactItem>
								<artifactItem>
									<groupId>org.antlr</groupId>
									<artifactId>stringtemplate</artifactId>
									<version>3.2.1</version>
									<outputDirectory>${basedir}/target/classes</outputDirectory>
								</artifactItem>

							</artifactItems>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.felix</groupId>
				<artifactId>maven-bundle-plugin</artifactId>
				<extensions>true</extensions>
				<configuration>
					<instructions>
						<_exportcontents>
							ro.isdc.wro4j.*;version=${wro4j.version}
						</_exportcontents>
						  <Export-Package>
             					 ro.isdc.wro.*;version=${wro4j.version}
            			</Export-Package>

						<Import-Package> 
						</Import-Package>

						<!-- bundle supplied resource prefixes -->
						<Include-Resource>{maven-resources}, ${basedir}/target/classes</Include-Resource>

						<!-- Do not inline jars, include as jar files -->
						<!-- There are config files with same name will be overwritten -->
						<Embed-Dependency>
						</Embed-Dependency>
<!-- ,
							stringtemplate;version=4.0.2;inline=true,
							stringtemplate;version=3.2.1;inline=false
 -->

					</instructions>
				</configuration>
			</plugin>
		</plugins>
		<pluginManagement>
			<plugins>
				<!--This plugin's configuration is used to store Eclipse m2e settings only. It has no influence on the Maven build itself.-->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.apache.maven.plugins</groupId>
										<artifactId>maven-dependency-plugin</artifactId>
										<versionRange>[2.3,)</versionRange>
										<goals>
											<goal>unpack</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>
	
		<profiles>
		<profile>
			<id>development</id> <!--  parent pomdefines variables expected.. we define the values for this particular profile -->
			<properties>
				<!-- Iniial bundle configurations (for example FsResource) -->
				<Felix-Initial-Configuration>
					configuration
				</Felix-Initial-Configuration>
				
				<Bundle-Category>						     
                              bizzns-base
                </Bundle-Category>
				
				<!-- initial content to be loaded on bundle installation -->
				<Sling-Initial-Content>
					initial-content;overwrite:=false;uninstall:=false
				</Sling-Initial-Content>
				
				<!-- Copy the files from filesystem to Bundle -->
				<Include-Resource>
					{maven-resources} 
				</Include-Resource>

				<!-- node types to be created -->
				<Sling-Nodetypes> 
				</Sling-Nodetypes>
			   
			   <!-- Delegate Bundle content as resource -->
				<Sling-Bundle-Resources>
					 /content;path:=/initial-content/content 				 
				</Sling-Bundle-Resources>

				<Export-Package>
					ro.isdc.wro.*;version=${wro4j.version}
				</Export-Package>
				
				<Private-Package> 
				</Private-Package>
				

				<Import-Package>  
							junit.framework.*;resolution:=optional,
							* ;resolution:=optional
				</Import-Package>
				<Embed-Dependency>
							wro4j-core;inline=false,
							wro4j-extension;inline=false,
							less4j;inline=false,
							jcommander;inline=false,
							commons-lang3;inline=false,
							antlr;inline=false,
							antlr-runtime;inline=false
				</Embed-Dependency>
			</properties>
		</profile> 
	</profiles>
	
	
	
	
	
	<dependencies>

		<dependency>
			<groupId>ro.isdc.wro4j</groupId>
			<artifactId>wro4j-core</artifactId>
			<version>${wro4j.version}</version>
		</dependency>

		<dependency>
			<groupId>ro.isdc.wro4j</groupId>
			<artifactId>wro4j-extensions</artifactId>
			<version>${wro4j.version}</version>
		</dependency>

		<dependency>
			<groupId>com.github.sommeri</groupId>
			<artifactId>less4j</artifactId>
			<version>1.0.1</version>
		</dependency>
		<dependency>
			<groupId>org.jruby</groupId>
			<artifactId>jruby</artifactId>
			<version>1.5.2</version>
		</dependency>

		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
			<version>3.0</version>
		</dependency>

		<dependency>
			<groupId>com.beust</groupId>
			<artifactId>jcommander</artifactId>
			<version>1.30</version>
		</dependency>

	 
		
		<dependency>
			<groupId>org.antlr</groupId>
			<artifactId>antlr</artifactId>
			<version>3.4</version>
		</dependency>

		<dependency>
			<groupId>org.antlr</groupId>
			<artifactId>antlr-runtime</artifactId>
			<version>3.4</version>
		</dependency>

		<dependency>
			<groupId>org.antlr</groupId>
			<artifactId>stringtemplate</artifactId>
			<version>3.2.1</version>
		</dependency>

		<dependency>
			<groupId>org.antlr</groupId>
			<artifactId>stringtemplate</artifactId>
			<version>4.0.2</version>
		</dependency>
		
		<dependency>
	<groupId>org.apache.servicemix.bundles</groupId>
	<artifactId>org.apache.servicemix.bundles.antlr-runtime</artifactId>
	<version>3.5_1</version>
</dependency>
            
		

	</dependencies>
</project>







